import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { FormikValues, useFormik } from "formik";
import { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [description, setDescription] = useState<String>("");
  const formik = useFormik({
    initialValues: {
      title: "",
      author: "",
      bookmark: "",
    },
    onSubmit: (values) => {
      handleSubmit(values);
    },
  });

  const handleSubmit = async (values: FormikValues) => {
    setDescription("");

    const { title, author, bookmark } = values;

    const response = await fetch("/api/openai", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        title,
        author,
        bookmark,
      }),
    });

    if (!response.ok) {
      throw new Error(response.statusText);
    }

    // This data is a ReadableStream
    const data = response.body;
    if (!data) {
      return;
    }

    const reader = data.getReader();
    const decoder = new TextDecoder();
    let done = false;

    while (!done) {
      const { value, done: doneReading } = await reader.read();
      done = doneReading;
      const chunkValue = decoder.decode(value);
      setDescription((prev) => prev + chunkValue);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <h1>Previously On</h1>
        <p>
          Enter the book title, author, and the last few sentences you read.
          ChatGPT will write a summary up to that point.
        </p>
        <form className={styles.form} onSubmit={formik.handleSubmit}>
          <label htmlFor="title">Book Title</label>
          <input
            id="title"
            name="title"
            type="text"
            onChange={formik.handleChange}
            value={formik.values.title}
          />
          <label htmlFor="author">Author</label>
          <input
            id="author"
            name="author"
            type="text"
            onChange={formik.handleChange}
            value={formik.values.author}
          />
          <label htmlFor="bookmark">The Last Sentence Or Two You Read</label>
          <textarea
            id="bookmark"
            name="bookmark"
            onChange={formik.handleChange}
            value={formik.values.bookmark}
          />
          <button type="submit">Submit</button>
        </form>
        <div>
          {description.split("\n\n").map((chunk) => {
            return (
              <div key={chunk} className={styles.text_chunk}>
                <p>{chunk}</p>
              </div>
            );
          })}
          {/* {description} */}
        </div>
      </main>
    </>
  );
}
